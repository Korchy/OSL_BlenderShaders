OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader PolarCap
param	vector	Pos	0 0 0 		 %read{2,2} %write{0,0}
param	float	NorthBorder	0.5 		 %read{9,21} %write{2147483647,-1}
param	float	SouthBorder	0.5 		 %read{4,35} %write{2147483647,-1}
param	float	Noise	0 		 %read{36,36} %write{2147483647,-1}
oparam	float	Factor	0 		 %read{21,38} %write{20,39}
global	point	P	 %read{0,0} %write{2147483647,-1}
local	vector	lP	 %read{14,32} %write{2,2}
local	float	SB	 %read{27,27} %write{7,7}
local	float	NB	 %read{15,23} %write{13,13}
const	string	$const1	"object"		 %read{2,2} %write{2147483647,-1}
const	string	$const2	"transform"		 %read{1,1} %write{2147483647,-1}
const	string	$const3	"common"		 %read{2,2} %write{2147483647,-1}
temp	float	$tmp1	 %read{6,6} %write{5,5}
const	float	$const4	0		 %read{5,39} %write{2147483647,-1}
const	float	$const5	1		 %read{4,38} %write{2147483647,-1}
const	string	$const6	"clamp"		 %read{3,37} %write{2147483647,-1}
temp	float	$tmp2	 %read{5,5} %write{4,4}
const	float	$const7	2		 %read{6,34} %write{2147483647,-1}
temp	float	$tmp3	 %read{7,7} %write{6,6}
temp	float	$tmp4	 %read{11,11} %write{10,10}
temp	float	$tmp5	 %read{10,10} %write{9,9}
temp	float	$tmp6	 %read{12,12} %write{11,11}
temp	float	$tmp7	 %read{13,13} %write{12,12}
const	int	$const8	2		 %read{14,32} %write{2147483647,-1}
temp	float	$tmp8	 %read{15,15} %write{14,14}
temp	int	$tmp9	 %read{16,16} %write{15,15}
temp	float	$tmp10	 %read{18,18} %write{17,17}
temp	float	$tmp11	 %read{19,19} %write{18,18}
temp	float	$tmp12	 %read{20,20} %write{19,19}
temp	float	$tmp13	 %read{23,23} %write{22,22}
temp	int	$tmp14	 %read{24,24} %write{23,23}
temp	int	$tmp15	 %read{25,30} %write{24,29}
const	int	$const10	0		 %read{24,28} %write{2147483647,-1}
temp	float	$tmp16	 %read{27,27} %write{26,26}
temp	int	$tmp17	 %read{28,28} %write{27,27}
temp	int	$tmp18	 %read{29,29} %write{28,28}
temp	float	$tmp19	 %read{33,33} %write{32,32}
temp	float	$tmp20	 %read{34,34} %write{33,33}
temp	float	$tmp21	 %read{39,39} %write{38,38}
code Pos
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:3
#     float NorthBorder = 0.5,    // (0 - +1)
	assign		Pos P 	%filename{"D:\\Blender\\OSL\\PolarCap\\PolarCap.osl"} %line{3} %argrw{"wr"}
code ___main___
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:10
#     // После преобразования локальные координаты изменяются от 0 от центра объекта до -1 (нижняя точка) и до 1 (верхняя точка)
	functioncall	$const2 3 	%filename{"D:\\Blender\\OSL\\PolarCap\\PolarCap.osl"} %line{10} %argrw{"r"}
# C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h:227
# }
	transformv	lP $const3 $const1 Pos 	%filename{"C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h"} %line{227} %argrw{"wrrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:12
#     float NB = (1.0 - clamp(NorthBorder,0.0,1.0))*2.0 - 1.0;    // Граница верхней шапки (приводим к локальным координатам объекта)
	functioncall	$const6 6 	%filename{"D:\\Blender\\OSL\\PolarCap\\PolarCap.osl"} %line{12} %argrw{"r"}
# C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h:142
# color  mod (color  a, color  b) { return a - b*floor(a/b); }
	min		$tmp2 SouthBorder $const5 	%filename{"C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h"} %line{142} %argrw{"wrr"}
	max		$tmp1 $tmp2 $const4 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:12
#     float NB = (1.0 - clamp(NorthBorder,0.0,1.0))*2.0 - 1.0;    // Граница верхней шапки (приводим к локальным координатам объекта)
	mul		$tmp3 $tmp1 $const7 	%filename{"D:\\Blender\\OSL\\PolarCap\\PolarCap.osl"} %line{12} %argrw{"wrr"}
	sub		SB $tmp3 $const5 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:13
#     if(lP[2]>=NB) {     // Верхняя шапка
	functioncall	$const6 11 	%line{13} %argrw{"r"}
# C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h:142
# normal mod (normal a, normal b) { return a - b*floor(a/b); }
	min		$tmp5 NorthBorder $const5 	%filename{"C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h"} %line{142} %argrw{"wrr"}
	max		$tmp4 $tmp5 $const4 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:13
#     if(lP[2]>=NB) {     // Верхняя шапка
	sub		$tmp6 $const5 $tmp4 	%filename{"D:\\Blender\\OSL\\PolarCap\\PolarCap.osl"} %line{13} %argrw{"wrr"}
	mul		$tmp7 $tmp6 $const7 	%argrw{"wrr"}
	sub		NB $tmp7 $const5 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:14
#         Factor = 1-(lP[2]+1)/2.0;       // Градиент (+1 - 0)
	compref		$tmp8 lP $const8 	%line{14} %argrw{"wrr"}
	ge		$tmp9 $tmp8 NB 	%argrw{"wrr"}
	if		$tmp9 22 36 	%argrw{"r"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:15
#         Factor = Factor/(NorthBorder);  // Масштабировать градиент от вершины до границы
	compref		$tmp10 lP $const8 	%line{15} %argrw{"wrr"}
	add		$tmp11 $tmp10 $const5 	%argrw{"wrr"}
	div		$tmp12 $tmp11 $const7 	%argrw{"wrr"}
	sub		Factor $const5 $tmp12 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:16
#     }
	div		Factor Factor NorthBorder 	%line{16} %argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:19
#             Factor = 1.0;
	compref		$tmp13 lP $const8 	%line{19} %argrw{"wrr"}
	lt		$tmp14 $tmp13 NB 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const10 	%argrw{"wrr"}
	if		$tmp15 30 30 	%argrw{"r"}
	compref		$tmp16 lP $const8 	%argrw{"wrr"}
	gt		$tmp17 $tmp16 SB 	%argrw{"wrr"}
	neq		$tmp18 $tmp17 $const10 	%argrw{"wrr"}
	assign		$tmp15 $tmp18 	%argrw{"wr"}
	if		$tmp15 32 36 	%argrw{"r"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:20
#         }
	assign		Factor $const5 	%line{20} %argrw{"wr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:23
#             Factor = Factor/(SouthBorder);  // Масштабировать градиент от вершины до границы
	compref		$tmp19 lP $const8 	%line{23} %argrw{"wrr"}
	add		$tmp20 $tmp19 $const5 	%argrw{"wrr"}
	div		Factor $tmp20 $const7 	%argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:24
#         }
	div		Factor Factor SouthBorder 	%line{24} %argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:27
#     Factor = clamp(Factor,0.0,1.0); // Отбросить то, что выходит за границы (0 - +1)
	add		Factor Noise Factor 	%line{27} %argrw{"wrr"}
# D:\\Blender\\OSL\\PolarCap\\PolarCap.osl:28
# }
	functioncall	$const6 40 	%line{28} %argrw{"r"}
# C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h:142
# float hypot (float a, float b, float c) { return sqrt (a*a + b*b + c*c); }
	min		$tmp21 Factor $const5 	%filename{"C:/Program Files\\blender-2.67b-windows64\\2.67\\scripts\\addons\\cycles\\shader\\stdosl.h"} %line{142} %argrw{"wrr"}
	max		Factor $tmp21 $const4 	%argrw{"wrr"}
	end
