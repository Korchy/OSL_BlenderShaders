shader PolarCap(
    vector Pos = P,
    float NorthBorder = 0.5,    // (0 - +1)
    float SouthBorder = 0.5,    // (0 - +1)
    float Noise = 0.0,          // (0 - +1)
    output float Factor = 0)
{

    vector lP = transform("object",Pos);
    // После преобразования локальные координаты изменяются от 0 от центра объекта до -1 (нижняя точка) и до 1 (верхняя точка)
    float SB = (clamp(SouthBorder,0.0,1.0))*2.0 - 1.0;          // Граница нижней шапки (приводим к локальным координатам объекта)
    float NB = (1.0 - clamp(NorthBorder,0.0,1.0))*2.0 - 1.0;    // Граница верхней шапки (приводим к локальным координатам объекта)
    if(lP[2]>=NB) {     // Верхняя шапка
        Factor = 1-(lP[2]+1)/2.0;       // Градиент (+1 - 0)
        Factor = Factor/(NorthBorder);  // Масштабировать градиент от вершины до границы
    }
    else {
        if(lP[2]<NB&&lP[2]>SB) {    // Центральная часть
            Factor = 1.0;
        }
        else {                      // Нижняя шапка
            Factor = (lP[2]+1)/2.0;         // Градиент (0 - +1)
            Factor = Factor/(SouthBorder);  // Масштабировать градиент от вершины до границы
        }
    }
    Factor = Noise+Factor;          // Сложение шума и градиента. Результат: шум с силой градиента (-1 - +1)
    Factor = clamp(Factor,0.0,1.0); // Отбросить то, что выходит за границы (0 - +1)
}
